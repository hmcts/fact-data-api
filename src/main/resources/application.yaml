server:
  port: 8989
  shutdown: "graceful"

management:
  endpoint:
    health:
      show-details: "always"
      group:
        readiness:
          include: "db"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.fact.data.api.controllers
  writer-with-order-by-keys: true

spring:
  config:
    import: "optional:configtree:/mnt/secrets/fact-kv/"
  application:
    name: FaCT Data API
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: ConnectionPool
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        format_sql: 'true'
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'true'
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
  # sets the default property inclusion to include all fields,
  # regardless of their null/empty state
  jackson:
    default-property-inclusion: always
  # required for the poc - this will be in master soon, but
  # it's easier for now to not worry about integrating
  cloud:
    azure:
      profile:
        tenant-id: ${AZURE_TENANT_ID}
      credential:
        managed-identity-enabled: ${AZURE_MANAGED_IDENTITY_ENABLED:false}
        client-id: ${AZURE_CLIENT_ID}
      # required for security flows
      active-directory:
        enabled: true

        profile:
          tenant-id: ${AZURE_TENANT_ID}
        # required as this will be what's in the "aud" claim for Jwt tokens
        # received by the controllers - the actual audience will be valid
        # if it's the value below, or the raw AZURE_CLIENT_ID value from
        # above - Jwt's created by azure's oath return the app uri or just
        # the app id
        app-id-uri: ${AZURE_APP_ID}

dbMigration:
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

logging.level.com.microsoft: TRACE
logging.level.com.azure: TRACE
